name: Build and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "22"
          distribution: "graalvm"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Make scripts executable
        run: |
          chmod +x setup_dependencies.sh
          chmod +x build_app_mac.sh

      - name: Setup dependencies
        run: |
          echo "Setting up fresh dependencies with H2 database..."
          rm -rf lib
          ./setup_dependencies.sh
          echo "Verifying dependencies:"
          ls -la lib/
          if [ -f "lib/h2-2.2.224.jar" ]; then
            echo "✓ H2 database jar found"
          else
            echo "✗ H2 database jar not found"
            exit 1
          fi
          if ls lib/sqlite-jdbc-*.jar 1> /dev/null 2>&1; then
            echo "✗ Found SQLite JDBC jar - this should not happen"
            exit 1
          else
            echo "✓ No SQLite JDBC jars found (as expected)"
          fi

      - name: Build native application
        run: ./build_app_mac.sh

      - name: Verify build
        run: |
          ls -la dist/
          file dist/papi-converter
          ./dist/papi-converter --help || true

      - name: Package distribution
        run: |
          mkdir -p release/papi-converter-mac
          cp dist/papi-converter release/papi-converter-mac/
          cp -r static release/papi-converter-mac/
          chmod +x release/papi-converter-mac/papi-converter
          cd release && tar -czf papi-converter-mac.tar.gz papi-converter-mac

      - name: Upload Mac artifact
        uses: actions/upload-artifact@v4
        with:
          name: papi-converter-mac
          path: release/papi-converter-mac.tar.gz

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "22"
          distribution: "graalvm"
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Visual Studio tools for native-image
        uses: microsoft/setup-msbuild@v2
        
      - name: Setup Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup dependencies
        run: |
          echo "Setting up fresh dependencies with H2 database..."
          if exist lib rmdir /s /q lib
          mkdir lib
          echo "Downloading JAR dependencies directly..."
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/com/healthmarketscience/jackcess/jackcess/4.0.5/jackcess-4.0.5.jar' -OutFile 'lib\jackcess-4.0.5.jar'"
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar' -OutFile 'lib\commons-lang3-3.12.0.jar'"
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar' -OutFile 'lib\commons-logging-1.2.jar'"
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar' -OutFile 'lib\jackson-core-2.15.2.jar'"
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar' -OutFile 'lib\jackson-databind-2.15.2.jar'"
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar' -OutFile 'lib\jackson-annotations-2.15.2.jar'"
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/com/h2database/h2/2.2.224/h2-2.2.224.jar' -OutFile 'lib\h2-2.2.224.jar'"
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar' -OutFile 'lib\slf4j-api-2.0.9.jar'"
          powershell -Command "Invoke-WebRequest -Uri 'https://repo1.maven.org/maven2/org/slf4j/slf4j-simple/2.0.9/slf4j-simple-2.0.9.jar' -OutFile 'lib\slf4j-simple-2.0.9.jar'"
          echo "Verifying dependencies:"
          dir lib\
          if exist "lib\h2-2.2.224.jar" (
            echo "✓ H2 database jar found"
          ) else (
            echo "✗ H2 database jar not found"
            exit /b 1
          )
        shell: cmd

      - name: Build native application
        run: |
          echo "GRAALVM_HOME is: %GRAALVM_HOME%"
          echo "JAVA_HOME is: %JAVA_HOME%"
          .\build_app_win.bat
        shell: cmd

      - name: Verify build
        run: |
          dir dist\
          echo "Testing native binary:"
          .\dist\papi-converter.exe --help
          echo "Native binary verification completed successfully!"
        shell: cmd
        continue-on-error: true

      - name: Package distribution
        run: |
          mkdir release\papi-converter-windows
          copy dist\papi-converter.exe release\papi-converter-windows\
          xcopy static release\papi-converter-windows\static\ /E /I
          cd release && 7z a papi-converter-windows.zip papi-converter-windows
        shell: cmd

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: papi-converter-windows
          path: release/papi-converter-windows.zip

  release:
    runs-on: ubuntu-latest
    needs: [build-mac, build-windows]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Mac artifact
        uses: actions/download-artifact@v4
        with:
          name: papi-converter-mac

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: papi-converter-windows

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            papi-converter-mac.tar.gz
            papi-converter-windows.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
